@* @model List<PizzaShop.Domain.DataModels.Category> *@

@model PizzaShop.Domain.ViewModels.MenuViewModel

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Menu</title>
    <link rel="stylesheet" href="~/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/style.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css">
    <style>
        .action-icons {
            display: none;
            margin-left: auto;
        }

        .category-row:hover .action-icons {
            display: flex;
        }

        .hide {
            display: none;
        }

        .edit-icon,
        .delete-icon {
            cursor: pointer;
            width: 20px;
            height: 20px;
            margin-left: 10px;
        }

        .blurred {
            filter: blur(5px);
        }
    </style>
</head>

<body>

    <div class="container mt-4" id="main-content">
        <div class="header">
            <h3>Menu</h3>
        </div>

        <ul class="nav p-2 nav-tabs " id="menuTabs">
            <li class="nav-item"><a class="nav-link active" data-bs-toggle="tab" href="#items"><img
                        src="~/images/add-list.png" height="24" width="24" alt=""> Items</a> </li>
            <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#modifiers"> <img
                        src="~/images/triangle_11004056.png" height="24" width="24" alt=""> Modifiers</a></li>
        </ul>
        <div class="tab-content mt-3">
            <div class="tab-pane fade show active" id="items">
                <div class="row">
                    <div class="col-md-3">
                        <div class="list-group">
                            <a href="#" class="list-group-item active">Category <button
                                    class="btn btn-sm btn-primary border float-end" data-bs-toggle="modal"
                                    data-bs-target="#addCategoryModal">+</button></a>
                            @foreach (var category in Model.Categories)
                            {
                                <div class="list-group-item d-flex align-items-center category-row" data-id="@category.Id"
                                    onclick="fetchMenuItems(@category.Id)">
                                    <div class="category-name"><img height="24" width="24" src="~/images/dining-menu.png"
                                            alt=""> @category.CategoryName</div>
                                    <div class="action-icons">
                                        <img src="~/images/icons8-pencil-50.png" class="edit-icon" title="Edit" onclick="openEditModal(event, @category.Id, '@category.CategoryName',
                                    '@category.Description')">
                                        <img src="~/images/icons8-delete-80.png" class="delete-icon" title="Delete"
                                            onclick="openDeleteModal(event, @category.Id)">
                                    </div>
                                </div>
                            }


                        </div>
                    </div>
                    <div class="col-md-9">
                        <h4 class="text-primary">Items</h4>
                        <div class="d-flex flex-row-reverse mb-2 ">
                            <button type="button" class="btn btn-primary " data-bs-toggle="modal"
                                data-bs-target="#menuItemModal"> New Item</button>


                            <button class="btn border "> <img src="~/images/icons8-delete-80.png" height="24" width="24"
                                    alt=""></button>

                            <input type="text" class="form-control w-25" placeholder="Search..." id="searchBox">

                        </div>

                        <div class="table-container">
                            <table class="table table-bordered menu_table" id="menuTable">
                                <thead>
                                    <tr>
                                        <th><input class="form-check-input" type="checkbox" value="" id="selectAll">
                                        </th>
                                        <th>Name</th>
                                        <th>Item Type</th>
                                        <th>Rate</th>
                                        <th>Quantity</th>
                                        <th>Available</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody id="menuTableBody">
                                    <!-- Menu items will be displayed here -->
                                </tbody>
                            </table>
                        </div>
                    </div>



                    <!--For Partial View!-->

                    @* <div class="col-md-9">
                    <h4 class="text-primary">Items</h4>
                    <div class="d-flex flex-row-reverse mb-2">
                    <button type="button" class="btn btn-primary" data-bs-toggle="modal"
                    data-bs-target="#menuItemModal">New Item</button>
                    <button class="btn border"><img src="~/images/icons8-delete-80.png" height="24" width="24"
                    alt=""></button>
                    <input type="text" class="form-control w-25" placeholder="Search..." id="searchBox">
                    </div>
                    <div class="table-container" id="menuItemsContainer">
                    <!-- Partial view will be loaded here -->
                    </div>
                    </div> *@
                </div>
            </div>

            <!--modifiers-->
            <div class="tab-pane fade" id="modifiers">
                <div class="row">
                    <div class="col-md-3">
                        <div class="list-group">
                            <a href="#" class="list-group-item active">Modifier Group <button
                                    class="btn btn-sm btn-primary border float-end" data-bs-toggle="modal"
                                    data-bs-target="#addModifierModal">+</button></a>
                            @foreach (var modifierGroup in Model.ModifierGroups)
                            {
                                <div class="list-group-item d-flex align-items-center modifier-group-row"
                                    data-id="@modifierGroup.Id" onclick="fetchModifierItems(@modifierGroup.Id)">
                                    <div class="modifier-group-name"><img height="24" width="24"
                                            src="~/images/dining-menu.png" alt=""> @modifierGroup.Name</div>
                                    <div class="action-icons">
                                        <img src="~/images/icons8-pencil-50.png" class="edit-icon" title="Edit"
                                            onclick="openEditModifierModal(event, @modifierGroup.Id, '@modifierGroup.Name', '@modifierGroup.Description')">
                                        <img src="~/images/icons8-delete-80.png" class="delete-icon" title="Delete"
                                            onclick="openDeleteModifierModal(event, @modifierGroup.Id)">
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="col-md-9">
                        <h4 class="text-primary">Modifiers</h4>
                        <div class="d-flex flex-row-reverse mb-2">
                            <button type="button" class="btn btn-primary" data-bs-toggle="modal"
                                data-bs-target="#modifierItemModal"> New Modifier</button>
                            <button class="btn border"><img src="~/images/icons8-delete-80.png" height="24" width="24"
                                    alt=""></button>
                            <input type="text" class="form-control w-25" placeholder="Search..." id="modifierSearchBox">
                        </div>
                        <div class="table-container">
                            <table class="table table-bordered modifier_table" id="modifierTable">
                                <thead>
                                    <tr>
                                        <th><input type="checkbox"></th>
                                        <th>Name</th>
                                        <th>Rate</th>
                                        <th>Quantity</th>
                                        <th>Available</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody id="modifierTableBody">
                                    <!-- Modifier items will be displayed here -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Add Category Modal -->
        <div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryModalLabel"
            aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addCategoryModalLabel">Add Category</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <label>Category Name:</label>
                        <input type="text" id="addCategoryName" class="form-control">
                        <label>Description:</label>
                        <input type="text" id="addCategoryDescription" class="form-control">
                        <div class="d-flex flex-row-reverse">
                            <button class="btn text-primary mt-2" data-bs-dismiss="modal">Cancel</button>
                            <button class="btn btn-primary mt-2" id="addCategoryBtn">Save</button>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Add Modifier Modal -->

        <div class="modal fade" id="addModifierModal" tabindex="-1" aria-labelledby="addModifierModalLabel"
            aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addModifierModalLabel">Add ModifierGroup</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <label>Modifier Name:</label>
                        <input type="text" id="addModifierName" class="form-control">
                        <label>Description:</label>
                        <input type="text" id="addModifierDescription" class="form-control">

                        <p class="text-primary mt-4">+Add Existing Modifiers</p>
                        <div class="d-flex flex-row-reverse">
                            <button class="btn text-primary mt-2" data-bs-dismiss="modal">Cancel</button>
                            <button class="btn btn-primary mt-2" id="addModifierBtn">Save</button>

                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Edit Category Modal -->
        <div class="modal fade" id="editCategoryModal" tabindex="-1" aria-labelledby="editCategoryModalLabel"
            aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editCategoryModalLabel">Edit Category</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" id="editCategoryId">
                        <label>Category Name:</label>
                        <input type="text" id="editCategoryName" class="form-control">
                        <label>Description:</label>
                        <input type="text" id="editCategoryDescription" class="form-control">
                        <button class="btn btn-primary mt-2" id="updateCategoryBtn">Update</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Delete Confirmation Modal -->
        <div class="modal fade" id="deleteCategoryModal" tabindex="-1" aria-labelledby="deleteCategoryModalLabel"
            aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-body">
                        <p>Are you sure you want to delete this category?</p>
                        <button class="btn btn-danger" id="confirmDeleteBtn">Yes, Delete</button>
                        <button class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        </div>


        <!-- Add New Item Modal -->
        <div class="modal fade" id="menuItemModal" tabindex="-1" aria-labelledby="menuItemModalLabel"
            aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="menuItemModalLabel">Add New Menu Item</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <!-- Left Section (70%) -->
                            <div class="col-md-8">
                                <form id="addItemForm">
                                    <div class="row mb-3">
                                        <div class="col-md-6 form-floating">

                                            <select class="form-select" id="categoryDropdown" name="categoryId">
                                                <!-- Options will be populated here -->
                                            </select>
                                            <label class="form-label" for="categoryDropdown">Category*</label>
                                        </div>

                                        <div class="col-md-6 ">
                                            <div class="form-floating">

                                                <input type="text" class="form-control" id="floatingInput"
                                                    name="itemName" placeholder="name">
                                                <label for="floatingInput">Name</label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col-md-3">
                                            <label class="form-label">Item Type*</label>
                                            <select class="form-select" id="itemTypeDropdown" name="itemType">
                                                <!-- Options will be populated here -->
                                            </select>
                                        </div>
                                        <div class="col-md-3">
                                            <label class="form-label">Rate*</label>
                                            <input type="number" class="form-control" name="rate" value="0">
                                        </div>
                                        <div class="col-md-3">
                                            <label class="form-label">Quantity*</label>
                                            <input type="number" class="form-control" name="quantity" value="0">
                                        </div>
                                        <div class="col-md-3">
                                            <label class="form-label">Unit*</label>
                                            <select class="form-select" id="unitDropdown" name="unit">
                                                <!-- Options will be populated here -->
                                            </select>
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col-md-3">
                                            <div class="form-check form-switch mt-4">
                                                <input class="form-check-input" type="checkbox" id="available"
                                                    name="IsAvailable" value="true">
                                                <label class="form-check-label " for="available">Available</label>
                                            </div>
                                            @* <div class="form-check form-switch mt-4">
                                            <input class="form-check-input" type="checkbox" name="isAvailable">
                                            Available
                                            </div> *@
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-check form-switch mt-4">
                                                <input class="form-check-input" type="checkbox" name="IsTaxable"
                                                    value="true"> Tax
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <label class="form-label">Tax Percentage</label>
                                            <input type="text" class="form-control" name="taxPercentage">
                                        </div>
                                        <div class="col-md-3">
                                            <label class="form-label">Short Code</label>
                                            <input type="text" class="form-control" name="shortCode">
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Description</label>
                                        <textarea class="form-control" rows="2" name="description"></textarea>
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Upload Image</label>
                                        <div class="border p-3 text-center">
                                            <input type="file" class="form-control" name="image">
                                            <small class="text-muted">Drag and Drop or Browse files</small>
                                        </div>
                                    </div>
                                </form>
                            </div>
                            <!-- Right Section (30%) -->
                            <div class="col-md-4">
                                <div class="modifier-section">
                                    <label class="form-label">Select Modifier Group(s)</label>
                                    <select class="form-select" name="modifierGroups">
                                        <option selected>Select Modifier Group(s)</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" id="saveNewItemBtn">Save</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        </div>

        <!--Edit item modal-->

        <div class="modal fade" id="editMenuItemModal" tabindex="-1" aria-labelledby="editMenuItemModalLabel"
            aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editMenuItemModalLabel">Edit Menu Item</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <!-- Left Section (70%) -->
                            <div class="col-md-8">
                                <form id="editItemForm" enctype="multipart/form-data">
                                    <input type="hidden" id="editItemId" name="Id">
                                    <div class="row mb-3">
                                        <div class="col-md-6">
                                            <label class="form-label">Category*</label>
                                            <select class="form-select" id="editCategoryDropdown" name="CategoryId">
                                                <!-- Options will be populated here -->
                                            </select>
                                        </div>
                                        <div class="col-md-6">
                                            <label class="form-label">Name*</label>
                                            <input type="text" class="form-control" name="ItemName" id="editItemName"
                                                placeholder="Enter name">
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col-md-3">
                                            <label class="form-label">Item Type*</label>
                                            <select class="form-select" id="editItemTypeDropdown" name="ItemType">
                                                <!-- Options will be populated here -->
                                            </select>
                                        </div>
                                        <div class="col-md-3">
                                            <label class="form-label">Rate*</label>
                                            <input type="number" class="form-control" name="Rate" id="editRate"
                                                value="0">
                                        </div>
                                        <div class="col-md-3">
                                            <label class="form-label">Quantity*</label>
                                            <input type="number" class="form-control" name="Quantity" id="editQuantity"
                                                value="0">
                                        </div>
                                        <div class="col-md-3">
                                            <label class="form-label">Unit*</label>
                                            <select class="form-select" id="editUnitDropdown" name="Unit">
                                                <!-- Options will be populated here -->
                                            </select>
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col-md-3">
                                            <div class="form-check form-switch mt-4">
                                                <input class="form-check-input" type="checkbox" name="IsAvailable"
                                                    id="editIsAvailable">
                                                <label class="form-check-label" for="editIsAvailable">Available</label>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-check form-switch mt-4">
                                                <input class="form-check-input" type="checkbox" name="IsTaxable"
                                                    id="editIsTaxable">
                                                <label class="form-check-label" for="editIsTaxable">Tax</label>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <label class="form-label">Tax Percentage</label>
                                            <input type="text" class="form-control" name="TaxPercentage"
                                                id="editTaxPercentage">
                                        </div>
                                        <div class="col-md-3">
                                            <label class="form-label">Short Code</label>
                                            <input type="text" class="form-control" name="ShortCode" id="editShortCode">
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Description</label>
                                        <textarea class="form-control" rows="2" name="Description"
                                            id="editDescription"></textarea>
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Upload Image</label>
                                        <div class="border p-3 text-center">
                                            <input type="file" class="form-control" name="Image">
                                            <small class="text-muted">Drag and Drop or Browse files</small>
                                        </div>
                                    </div>
                                </form>
                            </div>
                            <!-- Right Section (30%) -->
                            <div class="col-md-4">
                                <div class="modifier-section">
                                    <label class="form-label">Select Modifier Group(s)</label>
                                    <select class="form-select" name="ModifierGroups">
                                        <option selected>Select Modifier Group(s)</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" id="saveEditItemBtn">Save</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        </div>


        <!-- Delete Item Modal -->
        <div class="modal fade" id="deleteItemModal" tabindex="-1" role="dialog" aria-labelledby="deleteItemModalLabel"
            aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteItemModalLabel">Confirm Delete</h5>
                        <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to delete this item?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-danger" id="confirmDeleteItemBtn">Delete</button>
                    </div>
                </div>
            </div>
        </div>


        @section Scripts {

            <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
            <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
            <script>
                document.addEventListener("DOMContentLoaded", function () {
                    // Fetch dropdown data when the modal is opened
                    $('#menuItemModal').on('show.bs.modal', async function () {  // with id menuItemModal select and when modal about to open than async func call happens(.on('show.bs.modal)

                        let response = await fetch('/Menu/GetDropdownData');
                        if (response.ok) {
                            let data = await response.json();
                            populateDropdown('categoryDropdown', data.categories, 'categoryName');
                            populateDropdown('itemTypeDropdown', data.itemTypes);
                            populateDropdown('unitDropdown', data.units, 'name');
                        } else {
                            alert("Failed to fetch dropdown data.");
                        }
                    });

                    $('#menuItemModal').on('hidden.bs.modal', function () {
                        document.getElementById("main-content").classList.remove("blurred");
                    });

                    function populateDropdown(dropdownId, items, textProperty) {
                        let dropdown = document.getElementById(dropdownId);
                        dropdown.innerHTML = '';
                        items.forEach(item => {
                            let option = document.createElement('option');
                            option.value = item.id || item;
                            option.text = textProperty ? item[textProperty] : item;
                            dropdown.appendChild(option);
                        });
                    }
                });


                debugger
                document.getElementById("saveNewItemBtn").addEventListener("click", async function () {
                    let form = document.getElementById("addItemForm");
                    let formData = new FormData(form);
                    let response = await fetch("/Menu/AddMenuItem", {
                        method: "POST",
                        body: formData
                    });

                    if (response.ok) {
                        let newItem = await response.json();
                        location.reload();
                                @* addItemToTable(newItem); *@
                            $("#menuItemModal").modal("hide");

                        // Remove modal backdrop and modal-open class
                        document.body.classList.remove("modal-open");
                        let modalBackdrops = document.querySelectorAll(".modal-backdrop");
                        modalBackdrops.forEach(backdrop => backdrop.remove());

                        // Remove any custom blur effect
                        document.getElementById("main-content").classList.remove("blurred");
                    } else {
                        alert("Failed to add menu item.");
                    }
                });

                function addItemToTable(item) {
                    let menuTableBody = document.getElementById("menuTableBody");
                    let itemRow = document.createElement("tr");

                    itemRow.dataset.categoryId = item.categoryId;
                    itemRow.dataset.unit = item.unit;

                    itemRow.dataset.isTaxable = item.isTaxable;
                    itemRow.dataset.taxPercentage = item.taxPercentage;
                    itemRow.dataset.shortcode = item.shortcode;
                    itemRow.dataset.description = item.description;

                    itemRow.innerHTML = `
                                                                                                                                                        <td><input class="form-check-input row-checkbox" type="checkbox" value="" id="flexCheckChecked"></td>
                                                                                                                                                        <td>${item.itemName}</td>
                                                                                                                                                        <td><img src="${item.itemType === 'Vegetarian' ? '/images/Veg.jfif' : '/images/Non veg.jpg'}" width="24" height="24" alt=""></td>
                                                                                                                                                        <td>$${item.rate}</td>
                                                                                                                                                        <td>${item.quantity}</td>
                                                                                                                                                        <td>
                                                                                                                                                            <div class="container mt-0">
                                                                                                                                                                <div class="form-check form-switch">
                                                                                                                                                                    <input class="form-check-input" type="checkbox" ${item.isAvailable ? 'checked' : ''}>
                                                                                                                                                                </div>
                                                                                                                                                            </div>
                                                                                                                                                        </td>
                                                                                                                                                        <td>
                                                                                                                                                            <button class="btn btn-sm">
                                                                                                                                                                <img src="/images/icons8-pencil-50.png" height="24" width="24" alt="Edit">
                                                                                                                                                            </button>
                                                                                                                                                            <button class="btn btn-sm">
                                                                                                                                                                <img src="/images/icons8-delete-80.png" height="24" width="24" alt="Delete">
                                                                                                                                                            </button>
                                                                                                                                                        </td>
                                                                                                                                                    `;
                    menuTableBody.appendChild(itemRow);
                }


                document.getElementById("saveEditItemBtn").addEventListener("click", async function () {
                    let form = document.getElementById("editItemForm");
                    let formData = new FormData(form);



                    // Converting checkbox values to boolean strings
                    formData.set("IsAvailable", document.getElementById("editIsAvailable").checked ? "true" : "false");
                    formData.set("IsTaxable", document.getElementById("editIsTaxable").checked ? "true" : "false");

                    let response = await fetch("/Menu/UpdateMenuItem", {
                        method: "PUT",
                        body: formData
                    });

                        @* if (!response.ok) {
                    let errorText = await response.text();
                        alert("Failed to update menu item: " + errorText);
                    } *@

                                             if (response.ok) {
                        alert("update menu item successfully!");

                        location.reload();
                    } else {
                        alert("Failed to update menu item.");
                    }


                });

                document.getElementById('menuTableBody').addEventListener('click', async function (event) {
                    if (event.target.closest('img[alt="Edit"]')) {
                        let itemRow = event.target.closest('tr');
                        let item = {
                            id: itemRow.dataset.id,
                            itemName: itemRow.cells[1].innerText,
                            itemType: itemRow.cells[2].querySelector('img').src.includes('Veg.jfif') ? 'Vegetarian' : 'Non-Vegetarian',
                            rate: parseFloat(itemRow.cells[3].innerText.replace('$', '')),
                            quantity: parseInt(itemRow.cells[4].innerText),
                            isAvailable: itemRow.cells[5].querySelector('input[type="checkbox"]').checked,
                            categoryId: itemRow.dataset.categoryId,
                            unit: itemRow.dataset.unit,
                            isTaxable: itemRow.dataset.isTaxable === "true",
                            taxPercentage: itemRow.dataset.taxPercentage,
                            shortCode: itemRow.dataset.shortcode,
                            description: itemRow.dataset.description
                        };

                        // Fetch dropdown data from the server
                        let response = await fetch('/Menu/GetDropdownData');
                        if (response.ok) {
                            let data = await response.json();
                            populateDropdown('editCategoryDropdown', data.categories, 'categoryName', item.categoryId);
                            populateDropdown('editItemTypeDropdown', data.itemTypes, null, item.itemType);
                            populateDropdown('editUnitDropdown', data.units, 'name', item.unit);
                        } else {
                            alert("Failed to fetch dropdown data.");
                            return;
                        }

                        // Populate the edit modal with the item's data
                        let editForm = document.getElementById('editItemForm');
                        editForm.Id.value = item.id;
                        editForm.ItemName.value = item.itemName;
                        editForm.ItemType.value = item.itemType;
                        editForm.Rate.value = item.rate;
                        editForm.Quantity.value = item.quantity;
                        editForm.IsAvailable.checked = item.isAvailable;
                        editForm.IsTaxable.checked = item.isTaxable;
                        editForm.TaxPercentage.value = item.taxPercentage;
                        editForm.ShortCode.value = item.shortCode;
                        editForm.Description.value = item.description;

                        // Show the edit modal
                        let editModal = new bootstrap.Modal(document.getElementById('editMenuItemModal'));
                        editModal.show();
                    }
                });

                function populateDropdown(dropdownId, items, textProperty, selectedValue) {
                    let dropdown = document.getElementById(dropdownId);
                    dropdown.innerHTML = '';
                    items.forEach(item => {
                        let option = document.createElement('option');
                        option.value = item.id || item;
                        option.text = textProperty ? item[textProperty] : item;
                        if (selectedValue && option.value == selectedValue) {
                            option.selected = true;
                        }
                        dropdown.appendChild(option);
                    });
                }

                // select all checkbox
                document.getElementById("selectAll").addEventListener("change", function () {
                    let checkboxes = document.querySelectorAll("#menuTableBody .row-checkbox");
                    checkboxes.forEach(checkbox => {
                        checkbox.checked = this.checked;
                    });
                });

                async function fetchMenuItems(categoryId) {
                    console.log("Fetching menu items for category ID:", categoryId); // Debugging line
                    let response = await fetch(`/Menu/GetMenuItemsByCategory?categoryId=${categoryId}`);
                    if (response.ok) {
                        let menuItems = await response.json();
                        console.log("Menu items:", menuItems); // Debugging line
                        displayMenuItems(menuItems);
                    } else {
                        alert("Failed to fetch menu items.");
                    }
                }

                @* async function fetchMenuItems(categoryId) {
                        console.log("Fetching menu items for category ID:", categoryId); // Debugging line
                let response = await fetch(`/Menu/GetMenuItemsByCategory?categoryId=${categoryId}`);
                if (response.ok) {
                let partialViewHtml = await response.text();
                            document.getElementById("menuItemsContainer").innerHTML = partialViewHtml;
                } else {
                            alert("Failed to fetch menu items.");
                }
                } *@

                    function displayMenuItems(menuItems) {
                        let menuTableBody = document.getElementById("menuTableBody");
                        menuTableBody.innerHTML = "";
                        menuItems.forEach(item => {
                            let itemRow = document.createElement("tr");
                            itemRow.dataset.id = item.id;
                            itemRow.dataset.categoryId = item.categoryId;
                            itemRow.dataset.unit = item.unit;

                            itemRow.dataset.isTaxable = item.isTaxable;
                            itemRow.dataset.taxPercentage = item.taxPercentage;
                            itemRow.dataset.shortcode = item.shortcode;
                            itemRow.dataset.description = item.description;
                            itemRow.innerHTML = `
                                                                                                                                                                                                                                                        <td><input class="form-check-input row-checkbox" type="checkbox" value="" id="flexCheckChecked"></td>

                                                                                                                                                                                                                                                        <td> <img height="24" width="24" src="/images/dining-menu.png" alt="">  ${item.itemName}</td>
                                                                                                                                                                                                                                                        <td><img src="${item.itemType === 'Vegetarian' ? '/images/Veg.jfif' : '/images/Non veg.jpg'}" width="24" height="24" alt=""></td>
                                                                                                                                                                                                                                                        <td>$${item.rate}</td>
                                                                                                                                                                                                                                                        <td>${item.quantity}</td>
                                                                                                                                                                                                                                                         <td>
                                                                                                                                                                                                                                                            <div class="container mt-0">
                                                                                                                                                                                                                                                                <div class="form-check form-switch">
                                                                                                                                                                                                                                                                    <input class="form-check-input" type="checkbox" ${item.isAvailable ? 'checked' : ''}>
                                                                                                                                                                                                                                                                </div>
                                                                                                                                                                                                                                                            </div>
                                                                                                                                                                                                                                                        </td>
                                                                                                                                                                                                                                                        <td>
                                                                                                                                                                                                                                                            <button class="btn btn-sm">
                                                                                                                                                                                                                                                                <img src="/images/icons8-pencil-50.png" height="24" width="24" alt="Edit">
                                                                                                                                                                                                                                                            </button>
                                                                                                                                                                                                                                                            <button class="btn btn-sm">
                                                                                                                                                                                                                                                                <img src="/images/icons8-delete-80.png" height="24" width="24" alt="Delete">
                                                                                                                                                                                                                                                            </button>
                                                                                                                                                                                                                                                        </td>
                                                                                                                                                                                                                                                    `;
                            menuTableBody.appendChild(itemRow);
                        });
                    }

                function openEditModal(event, categoryId, categoryName, categoryDescription) {
                    event.stopPropagation();
                    document.getElementById("editCategoryId").value = categoryId;
                    document.getElementById("editCategoryName").value = categoryName;
                    document.getElementById("editCategoryDescription").value = categoryDescription;
                    $("#editCategoryModal").modal("show");
                }

                function openDeleteModal(event, categoryId) {
                    event.stopPropagation();
                    document.getElementById("confirmDeleteBtn").setAttribute("data-id", categoryId);
                    $("#deleteCategoryModal").modal("show");
                }

                document.addEventListener("DOMContentLoaded", function () {
                    document.getElementById("addCategoryBtn").addEventListener("click", async function () {
                        let categoryName = document.getElementById("addCategoryName").value;
                        let categoryDescription = document.getElementById("addCategoryDescription").value;

                        let response = await fetch("/Menu/AddCategory", {
                            method: "POST",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify({ categoryName, description: categoryDescription })
                        });

                        if (response.ok) {
                            alert("Category added successfully!");
                            location.reload();
                        } else {
                            alert("Failed to add category.");
                        }
                    });



                    document.querySelectorAll(".edit-icon").forEach(btn => {
                        btn.addEventListener("click", function (event) {
                            event.stopPropagation(); // Prevent triggering the fetchMenuItems function
                            let row = this.closest(".category-row");
                            let categoryId = row.getAttribute("data-id");
                            let categoryName = row.querySelector(".category-name").innerText.trim();

                            document.getElementById("editCategoryId").value = categoryId;
                            document.getElementById("editCategoryName").value = categoryName;

                            $("#editCategoryModal").modal("show");
                        });
                    });

                    document.getElementById("updateCategoryBtn").addEventListener("click", async function () {
                        let categoryId = document.getElementById("editCategoryId").value;
                        let categoryName = document.getElementById("editCategoryName").value;
                        let categoryDescription = document.getElementById("editCategoryDescription").value;

                        let response = await fetch(`/Menu/UpdateCategory/${categoryId}`, {
                            method: "PUT",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify({ id: categoryId, categoryName, description: categoryDescription })
                        });

                        if (response.ok) {
                            alert("Category updated successfully!");
                            location.reload();
                        } else {
                            alert("Failed to update category.");
                        }
                    });

                    document.querySelectorAll(".delete-icon").forEach(btn => {
                        btn.addEventListener("click", function (event) {
                            event.stopPropagation(); // Prevent triggering the fetchMenuItems function
                            let row = this.closest(".category-row");
                            let categoryId = row.getAttribute("data-id");

                            document.getElementById("confirmDeleteBtn").setAttribute("data-id", categoryId);
                            $("#deleteCategoryModal").modal("show");
                        });
                    });

                    document.getElementById("confirmDeleteBtn").addEventListener("click", async function () {
                        let categoryId = this.getAttribute("data-id");

                        let response = await fetch(`/Menu/SoftDeleteCategory/${categoryId}`, {
                            method: "PUT",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify({ is_deleted: true })
                        });

                        if (response.ok) {
                            alert("Category marked as deleted successfully!");
                            location.reload();
                        } else {
                            alert("Failed to mark category as deleted.");
                        }
                    });


                    // Soft delete item

                    document.getElementById('menuTableBody').addEventListener('click', async function (event) {
                        if (event.target.closest('img[alt="Delete"]')) {
                            let itemRow = event.target.closest('tr');
                            let itemId = itemRow.dataset.id;

                            // Show the delete confirmation modal
                            document.getElementById('confirmDeleteItemBtn').setAttribute('data-id', itemId);
                            let deleteModal = new bootstrap.Modal(document.getElementById('deleteItemModal'));
                            deleteModal.show();
                        }
                    });

                    document.getElementById('confirmDeleteItemBtn').addEventListener('click', async function () {
                        let itemId = this.getAttribute('data-id');
                        let response = await fetch(`/Menu/SoftDeleteItem/${itemId}`, {
                            method: 'PUT',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ is_deleted: true })
                        });
                        if (response.ok) {
                            alert('Item marked as deleted successfully!');
                            location.reload();
                        } else {
                            alert('Failed to mark item as deleted.');
                        }
                    });




                    // Search functionality
                    document.getElementById("searchBox").addEventListener("input", function () {
                        let searchQuery = this.value.toLowerCase();
                        let menuItems = Array.from(document.querySelectorAll("#menuTableBody tr"));  //node list return by querySelectorAll and convert into arr
                        menuItems.forEach(item => {
                            let itemName = item.querySelector("td:nth-child(2)").innerText.toLowerCase();
                            if (itemName.includes(searchQuery)) {
                                item.style.display = "";  //element will revert to its default display behavior as defined by its CSS or HTML tag
                            } else {
                                item.style.display = "none";
                            }
                        });
                    });
                });
            </script>
        }
        <script src="~/js/site.js"></script>
</body>

</html>