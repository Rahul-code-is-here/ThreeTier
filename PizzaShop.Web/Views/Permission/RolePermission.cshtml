@{
    ViewData["Title"] = "Role Permissions";
    var roles = ViewBag.Roles as List<PizzaShop.Domain.ViewModels.RoleViewModel>;
    var permissions = ViewBag.Permissions as List<PizzaShop.Domain.ViewModels.PermissionViewModel>;
}

<div class="bg-white user-box ms-5 me-5 p-5 mt-5">
    <div class="d-flex justify-content-between">
        <div class="h5"><strong>Permissions</strong></div>
        <a asp-action="RolePermission" class="back-btn btn cancel-btn-color">
            <div class="blue-color">&lt; Back</div>
        </a>
    </div>

    <hr>

    <!-- Role Selection -->
    <div class="table-responsive mt-4">
        <div class="col-6">
            <div class="form-floating">
                <select class="form-select" id="role" name="role" onchange="loadRolePermissions()">
                    <option value="">Select Role</option>
                    @foreach (var role in roles)
                    {
                        <option value="@role.Id">@role.Name</option>
                    }
                </select>
                <label for="role">Role</label>
            </div>
        </div>
    </div>

    <hr>

    <!-- Permissions Table -->
    <div class="table-responsive">
        <table class="table" id="permissionsTable">
            <thead>
                <tr>
                    <th>Permission</th>
                    <th class="text-center">Can View</th>
                    <th class="text-center">Can Add/Edit</th>
                    <th class="text-center">Can Delete</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var permission in permissions)
                {
                    <tr data-permission-id="@permission.Id">
                        <td>@permission.Name</td>
                        <td class="text-center">
                            <div class="form-check form-switch d-inline-block">
                                <input type="checkbox" class="form-check-input can-view">
                            </div>
                        </td>
                        <td class="text-center">
                            <div class="form-check form-switch d-inline-block">
                                <input type="checkbox" class="form-check-input can-add-edit" disabled>
                            </div>
                        </td>
                        <td class="text-center">
                            <div class="form-check form-switch d-inline-block">
                                <input type="checkbox" class="form-check-input can-delete" disabled>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Save & Cancel Buttons -->
    <div class="d-flex justify-content-end mt-3">
        <button type="button" class="btn navbar-color text-white me-2" onclick="saveRolePermissions()">Save</button>
        <a asp-controller="Auth" asp-action="Roles" class="btn cancel-btn-color">Cancel</a>
    </div>
</div>

<script>
    $(document).ready(function () {
        // Enable/disable dependencies when checkboxes change
        $(".can-view").change(function () {
            var row = $(this).closest("tr");
            var canAddEdit = row.find(".can-add-edit");
            var canDelete = row.find(".can-delete");

            if ($(this).prop("checked")) {
                canAddEdit.prop("disabled", false);
            } else {
                canAddEdit.prop("checked", false).prop("disabled", true);
                canDelete.prop("checked", false).prop("disabled", true);
            }
        });

        $(".can-add-edit").change(function () {
            var row = $(this).closest("tr");
            var canDelete = row.find(".can-delete");

            if ($(this).prop("checked")) {
                canDelete.prop("disabled", false);
            } else {
                canDelete.prop("checked", false).prop("disabled", true);
            }
        });

        $("#role").change(function () {
            loadRolePermissions();
        });

        loadRolePermissions();
    });

    function loadRolePermissions() {
        var roleId = $('#role').val();
        if (!roleId) {
            $('#permissionsTable tbody tr').each(function () {
                $(this).find("input").prop("checked", false);
            });
            return;
        }

        $.ajax({
            url: '/Permission/GetRolePermissions',
            type: 'GET',
            data: { roleId: roleId },
            success: function (data) {
                $('#permissionsTable tbody tr').each(function () {
                    var permissionId = $(this).data("permission-id");
                    var matchingPermission = data.find(p => p.permissionId == permissionId);

                    if (matchingPermission) {
                        $(this).find(".can-view").prop("checked", matchingPermission.canView);
                        $(this).find(".can-add-edit").prop("checked", matchingPermission.canAddEdit)
                            .prop("disabled", !matchingPermission.canView);
                        $(this).find(".can-delete").prop("checked", matchingPermission.canDelete)
                            .prop("disabled", !matchingPermission.canAddEdit);
                    } else {
                        $(this).find("input").prop("checked", false);
                    }
                });
            }
        });
    }

    function saveRolePermissions() {
        var roleId = $('#role').val();
        if (!roleId) {
            alert('Please select a role.');
            return;
        }

        var permissions = [];
        $('#permissionsTable tbody tr').each(function () {
            var permissionId = $(this).data('permission-id');
            permissions.push({
                PermissionId: permissionId,
                RoleId: parseInt(roleId),
                CanView: $(this).find('.can-view').prop('checked'),
                CanAddEdit: $(this).find('.can-add-edit').prop('checked'),
                CanDelete: $(this).find('.can-delete').prop('checked')
            });
        });

        $.ajax({
            url: '/Permission/SaveRolePermissions',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(permissions),
            success: function (response) {
                alert(response.success ? 'Permissions saved successfully!' : 'Failed to save permissions.');
            }
        });
    }
</script>
